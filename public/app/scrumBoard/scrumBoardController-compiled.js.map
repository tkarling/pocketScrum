{"version":3,"sources":["scrumBoardController.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;IAEP,oBAAoB;AACX,aADT,oBAAoB,CACV,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,gBAAgB,EAAE,WAAW,EAAE,YAAY,EAAE;8BADrF,oBAAoB;;AAElB,YAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,YAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;AACzB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC;AACrC,YAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,gBAAgB,CAAC;AAChD,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;AAEnB,YAAI,CAAC,cAAc,GAAG,cAAc,CAAC;AACrC,YAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACzC,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,sBAAc,CAAC,WAAW,CAAC,YAAY;AACnC,gBAAI,CAAC,YAAY,EAAE,CAAC;SACvB,CAAC,CAAC;;AAEH,YAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,YAAI,CAAC,aAAa,EAAG,CAAC;AACtB,mBAAW,CAAC,WAAW,CAAC,YAAY;AAChC,gBAAI,CAAC,aAAa,EAAE,CAAC;SACxB,CAAC,CAAC;;AAEH,YAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,YAAI,CAAC,aAAa,EAAE,CAAC;AACrB,oBAAY,CAAC,WAAW,CAAC,YAAY;AACjC,gBAAI,CAAC,aAAa,EAAE,CAAC;SACxB,CAAC,CAAC;KACN;;iBA3BC,oBAAoB;;eA6BP,2BAAG;AACd,mBAAO,IAAI,CAAC,cAAc,IACrB,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,cAAc,AAAC,CAAC;SAC3D;;;eAMY,yBAAG;AACZ,gBAAI,YAAY,GAAG,CAAC,CAAC;AACrB,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;AAC/C,gBAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;SAC3E;;;eAEY,yBAAG;AACZ,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnD;;;eAEW,wBAAG;AACX,gBAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;AAChD,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AAClD,gBAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACtB;;;eAEO,kBAAC,KAAK,EAAE;AACZ,gBAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AACnB,oBAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;AAChD,oBAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjD;SACJ;;;eAEU,qBAAC,KAAK,EAAE,KAAK,EAAE;AACtB,gBAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACzC,gBAAG,KAAK,EAAC;AACL,qBAAK,CAAC,eAAe,EAAE,CAAC;AACxB,qBAAK,CAAC,cAAc,EAAE,CAAC;aAC1B;SACJ;;;eAEQ,mBAAC,KAAK,EAAE,EAEhB;;;eAEc,yBAAC,KAAK,EAAE;AACnB,gBAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;;;eAEQ,mBAAC,MAAM,EAAE;AACd,gBAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,gBAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnD,gBAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SACjC;;;aA/CmB,eAAG;AACnB,mBAAO,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,EAAE,CAAC;SAChE;;;WApCC,oBAAoB;;;AAsF1B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC","file":"scrumBoardController-compiled.js","sourcesContent":["\"use strict\";\n\nclass ScrumBoardController {\n    constructor(C, MY_SERVER, userStoryStore, userStoryActions, statusStore, featureStore) {\n        this.C = C;\n        this.url = MY_SERVER.url;\n        var self = this;\n        this.baseUrl = this.url + \"/stories\";\n        this.thumbnailUrl = this.url + \"/thumbnail?id=\";\n        this.newStory = {};\n\n        this.userStoryStore = userStoryStore;\n        this.userStoryActions = userStoryActions;\n        this.resetStories();\n        userStoryStore.addListener(function () {\n            self.resetStories();\n        });\n\n        this.statusStore = statusStore;\n        this.resetStatuses ();\n        statusStore.addListener(function () {\n            self.resetStatuses();\n        });\n\n        this.featureStore = featureStore;\n        this.resetFeatures();\n        featureStore.addListener(function () {\n            self.resetFeatures();\n        });\n    }\n\n    featureSelected() {\n        return this.currentFeature &&\n            (this.currentFeature._id !== this.C.ALL_FEATURE_ID);\n    }\n\n    get currentFeatureId() {\n        return this.featureSelected() ? this.currentFeature._id : \"\";\n    }\n\n    resetStatuses() {\n        var NO_OF_GROUPS = 4;\n        this.statuses = this.statusStore.getStatuses();\n        this.statuses.splice(NO_OF_GROUPS, this.statuses.length - NO_OF_GROUPS);\n    }\n\n    resetFeatures() {\n        this.features = this.featureStore.getFeatures();\n    }\n\n    resetStories() {\n        this.stories = this.userStoryStore.getStories();\n        this.errorMsg = this.userStoryStore.getErrorMsg();\n        this.newStory = {};\n    }\n\n    addStory(story) {\n        if(this.newStory.name) {\n            this.newStory.feature = this.currentFeature._id;\n            this.userStoryActions.addStory(this.newStory);\n        }\n    }\n\n    removeStory(story, event) {\n        this.userStoryActions.removeStory(story);\n        if(event){\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    editStory(story) {\n\n    }\n\n    setDraggedStory(story) {\n        this.draggedStory = story;\n    }\n\n    setStatus(status) {\n        this.draggedStory.status = status;\n        this.userStoryActions.saveStory(this.draggedStory);\n        this.draggedStory = undefined;\n    }\n\n\n}\n\nangular.module(\"myApp\").controller(\"ScrumBoardController\", ScrumBoardController);"]}