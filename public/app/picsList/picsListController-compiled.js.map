{"version":3,"sources":["picsListController.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;IAEP,kBAAkB;AACT,aADT,kBAAkB,CACR,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE;8BADpD,kBAAkB;;AAEhB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,YAAI,CAAC,SAAS,EAAE,CAAC;;AAEjB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,iBAAS,CAAC,WAAW,CAAC,YAAY;AAC9B,gBAAI,CAAC,SAAS,EAAE,CAAC;SACpB,CAAC,CAAC;;;;;KAKN;;iBAhBC,kBAAkB;;eAkBX,qBAAG;AACR,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SACxC;;;eAEK,gBAAC,GAAG,EAAE;AACR,gBAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,gBAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACpB;;;eAEQ,mBAAC,GAAG,EAAE;AACX,gBAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SACnC;;;eAEU,qBAAC,IAAI,EAAE;AACd,gBAAI,CAAC,CAAC,GAAG,IAAI,CAAC;AACd,mBAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1B,gBAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,oBAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAC7B,uBAAG,EAAE,+CAA+C;AACpD,wBAAI,EAAE,IAAI;iBACb,CAAC,CAAC;;AAEH,oBAAI,IAAI,GAAG,IAAI,CAAC;AAChB,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,QAAQ,EAAE;AACjC,wBAAI,CAAC,QAAQ,CAAC,YAAY;AACtB,4BAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5B,+BAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;qBACtC,CAAC,CAAC;iBACN,EAAE,UAAU,QAAQ,EAAE;AACnB,wBAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;iBAC9D,CAAC,CAAC;;AAEH,oBAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,GAAG,EAAE;AAChC,wBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,GACxC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;iBAChC,CAAC,CAAC;aACN;SACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAxDC,kBAAkB;;;AAwFxB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC","file":"picsListController-compiled.js","sourcesContent":["\"use strict\";\n\nclass PicsListController {\n    constructor(picsStore, picsActions, Upload, $timeout) {\n        this.picsStore = picsStore;\n        this.picsActions = picsActions;\n        this.Upload = Upload;\n        this.$timeout = $timeout;\n        this.resetPics();\n\n        var self = this;\n        picsStore.addListener(function () {\n            self.resetPics();\n        });\n\n        //this.$watch('files', function() {\n        //    this.upload(this.files);\n        //});\n    }\n\n    resetPics() {\n        this.pics = this.picsStore.getPics();\n    }\n\n    addPic(pic) {\n        this.picsActions.addPic(pic);\n        this.newPic = \"\";\n    }\n\n    removePic(pic) {\n        this.picsActions.removePic(pic);\n    }\n\n    uploadFiles(file) {\n        this.f = file;\n        console.log(\"file\", file);\n        if (file && !file.$error) {\n            file.upload = this.Upload.upload({\n                url: 'http://localhost:3039/api/pocketScrum/uploads',\n                file: file\n            });\n\n            var self = this;\n            file.upload.then(function (response) {\n                self.$timeout(function () {\n                    file.result = response.data;\n                    console.log(\"result\", file.result);\n                });\n            }, function (response) {\n                if (response.status > 0)\n                    self.errorMsg = response.status + ': ' + response.data;\n            });\n\n            file.upload.progress(function (evt) {\n                file.progress = Math.min(100, parseInt(100.0 *\n                    evt.loaded / evt.total));\n            });\n        }\n    }\n    //upload(files) {\n    //    var thisUser = \"moi\";\n    //    if (files && files.length) {\n    //        var file = files[0];\n    //        Upload.upload({\n    //            url: 'http://localhost:3039',\n    //            fields: {\n    //                'username': thisUser\n    //            },\n    //            file: file\n    //        }).progress(function(evt) {\n    //            var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n    //            console.log('progress: ' + progressPercentage + '% ' +\n    //                evt.config.file.name);\n    //        }).success(function(data, status, headers, config) {\n    //            this.image = data;\n    //            if (this.image.uploadError) {\n    //                this.user.uploadError = this.image.uploadError;\n    //                console.log('error on hand');\n    //            } else {\n    //                this.user.uploadError = '';\n    //                //UserImage.saveUserImage(thisUser, $scope.image.path, function(data) {\n    //                //    $scope.loadUserImage(data.username);\n    //                //});\n    //            }\n    //        });\n    //    }\n    //}\n\n}\n\nangular.module(\"myApp\").controller(\"PicsListController\", PicsListController);"]}