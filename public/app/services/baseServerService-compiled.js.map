{"version":3,"sources":["baseServerService.js"],"names":[],"mappings":"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","file":"baseServerService-compiled.js","sourcesContent":["\"use strict\";\n\nclass baseServerService {\n    constructor($http, MY_SERVER) {\n        this.MY_SERVER = MY_SERVER;\n        this.$http = $http;\n        this.criteriaChar = \"&\";\n        this.currentItem = {name: \"All\"};\n    }\n\n    addItemsIfNeeded() {\n\n    }\n\n    setCurrentProjectId(project_id) {\n        this.currentProjectId = project_id;\n        this.url = this.MY_SERVER.url;\n        this.baseUrl = this.MY_SERVER.url + this.typeUri;\n        this.getUrl = this.baseUrl + (this.currentProjectId ? (\"?project=\" + this.currentProjectId) : \"?\");\n        this.baseUrlWId = this.baseUrl + \"?id=\";\n\n        //console.log(\"setCurrentProjectId\", this);\n        this.addItemsIfNeeded();\n    }\n\n    saveData(items) {\n\n    }\n\n    getItems() {\n        var getAllItemsItem = function(items) {\n            for(var i= 0; i < items.length; i++) {\n                if(items[i].name.indexOf(\"All \") !== -1) {\n                    return items[i];\n                }\n            }\n            return undefined;\n        }\n\n        return this.$http.get(this.getUrl).then((response) => {\n            var items = response.data;\n            this.saveData(items);\n            items.currentItem = this.currentItem;\n            //console.log(\"response.data.currentItem\", response.data.currentItem);\n            return items;\n        });\n    }\n\n    getItem(fieldname, expectedValue) {\n        var criteria = this.criteriaChar + fieldname + \"=\" + expectedValue;\n        return this.$http.get(this.getUrl + criteria).then(function(response) {\n            var items = response.data;\n            if(items.length > 0) {\n                return items[0];\n            }\n            return null;\n        });\n\n    }\n\n    addItem(item) {\n        item.project = this.currentProjectId;\n        return this.$http.post(this.baseUrl, item).then((response) => {\n            return response.data;\n        });\n    }\n\n    removeItem(item) {\n        return this.$http.delete(this.baseUrlWId + item._id).then((response) => {\n            return response.data;\n        });\n    }\n\n    saveItem(item) {\n        return this.$http.put(this.baseUrlWId + item._id, item).then((response) => {\n            return response.data;\n        });\n    }\n\n\n}\n\nclass statusService extends baseServerService {\n    constructor($http, MY_SERVER) {\n        super($http, MY_SERVER);\n        this.baseUrl = MY_SERVER.url +  MY_SERVER.statusUri;\n        this.getUrl = this.baseUrl;\n        this.baseUrlWId = this.baseUrl + \"?id=\";\n        this.criteriaChar = \"?\";\n\n\n        this.setupStatusesIfNeeded();\n        //console.log(\"init statusService\", this);\n    }\n\n    setupStatusesIfNeeded() {\n        this.getItems().then((items) => {\n            if(items.length === 0) {\n                this.addItem({name: \"not started\"});\n                this.addItem({name: \"in progress\"});\n                this.addItem({name: \"impeded\"});\n                this.addItem({name: \"done\"});\n                this.addItem({name: \"rejected\"});\n            }\n        });\n    }\n\n    not_started_status_id () {\n        return this.NOT_STARTED_STATUS_ID;\n    }\n\n    saveData(items) {\n        if(! this.NOT_STARTED_STATUS_ID) {\n            for(var i = 0; i < items.length; i++) {\n                if(items[i].name === \"not started\") {\n                    this.NOT_STARTED_STATUS_ID = items[i]._id;\n                    return;\n                }\n            }\n        }\n    }\n\n}\nangular.module(\"myApp\").service(\"statusService\", statusService);\n\nclass projectService extends baseServerService {\n    constructor($http, MY_SERVER) {\n        super($http, MY_SERVER);\n        this.baseUrl = MY_SERVER.url + MY_SERVER.projectsUri;\n        this.getUrl = this.baseUrl;\n        this.baseUrlWId = this.baseUrl + \"?id=\";\n        this.criteriaChar = \"?\";\n        //console.log(\"init projectService\", this);\n    }\n\n    addItem(item) {\n        return this.$http.post(this.baseUrl, item).then((response) => {\n            return response.data;\n        });\n    }\n\n}\nangular.module(\"myApp\").service(\"projectService\", projectService);\n\n\nclass featureService extends baseServerService {\n    constructor($http, MY_SERVER) {\n        super($http, MY_SERVER);\n        this.typeUri = MY_SERVER.featuresUri;\n        this.currentItem = {name: \"All Features\"};\n        //console.log(\"init featureService\", this);\n    }\n\n    addItemsIfNeeded() {\n        this.getItems().then((items) => {\n           if(items.length === 0) {\n               this.addItem({name: \"Feature1\", project: this.currentProjectId });\n               this.addItem({name: \"Feature2\", project: this.currentProjectId });\n\n           }\n        });\n    }\n\n}\nangular.module(\"myApp\").service(\"featureService\", featureService);\n\nclass teamMemberService extends baseServerService {\n    constructor($http, MY_SERVER) {\n        super($http, MY_SERVER);\n        this.typeUri = MY_SERVER.membersUri;\n        //console.log(\"init teamMemberService\", this);\n    }\n\n    addItemsIfNeeded() {\n        this.getItems().then((items) => {\n            if(items.length === 0) {\n                this.addItem({name: \"Test Member1\",\n                    authId: this.currentProjectId, authProvider: \"facebook\",\n                    email: this.currentProjectId,\n                    currentProject: this.currentProjectId});\n                this.addItem({name: \"Test Member2\",\n                    authId: this.currentProjectId+1, authProvider: \"facebook\",\n                    email: this.currentProjectId+1,\n                    currentProject: this.currentProjectId});\n            }\n        });\n    }\n\n}\nangular.module(\"myApp\").service(\"teamMemberService\", teamMemberService);\n\nclass userStoryService extends baseServerService {\n    constructor($http, MY_SERVER, statusService) {\n        super($http, MY_SERVER);\n        this.statusService = statusService;\n        this.typeUri = MY_SERVER.storiesUri;\n        //console.log(\"init userStoryService\", this);\n    }\n\n    addItem(item) {\n        item.status = this.statusService.not_started_status_id();\n        return super.addItem(item);\n    }\n\n}\nangular.module(\"myApp\").service(\"userStoryService\", userStoryService);\n"]}