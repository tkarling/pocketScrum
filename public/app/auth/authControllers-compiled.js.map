{"version":3,"sources":["authControllers.js"],"names":[],"mappings":"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","file":"authControllers-compiled.js","sourcesContent":["\"use strict\";\n\nclass AuthController {\n    constructor(authService) {\n        this.test = \"AuthController test\";\n        this.authService = authService;\n    }\n\n    getAuthInfo() {\n        this.authService.getAuthInfo();\n    }\n}\n\n\nangular.module(\"myApp\").controller(\"AuthController\", AuthController);\n\n\nclass BaseUserController {\n    constructor(MY_SERVER,  teamMemberStore) {\n        this.MY_SERVER = MY_SERVER;\n\n        this.teamMemberStore = teamMemberStore;\n        teamMemberStore.addListener(() => {\n            this.resetAuthUser();\n        });\n    }\n\n    resetAuthUser() {\n        this.myInfo = this.teamMemberStore.getAuthUserInfo();\n        if(this.myInfo) {\n            this.thumbnailUrl  = this.myInfo.picId ? this.MY_SERVER.url + this.MY_SERVER.thumbnailWIdUri +\n                this.myInfo.picId : \"./images/defaultTeamMember.jpg\";\n        }\n        //console.log(\"MainController resetAuthUser\", this.thumbnailUrl, this.myInfo,\n        //    this.myInfo? this.myInfo.picId: \"no picId\");\n    }\n\n\n}\n\nclass MainController extends BaseUserController {\n    constructor(C, MY_SERVER,  teamMemberStore, $location) {\n        super(MY_SERVER, teamMemberStore);\n        this.$location = $location;\n    }\n\n    gotoPage(path) {\n        //console.log(\"goto\", path);\n        this.$location.path(path);\n    }\n\n}\n\nangular.module(\"myApp\").controller(\"MainController\", MainController);\n\n\nclass AuthUserController extends BaseUserController {\n    constructor(MY_SERVER,  teamMemberStore, teamMemberActions, picsActions, picsStore) {\n        super(MY_SERVER,  teamMemberStore);\n        this.teamMemberActions = teamMemberActions;\n        this.picsActions = picsActions;\n        this.test = \"AuthUserController test\";\n        this.resetAuthUser();\n\n        this.picsStore = picsStore;\n        picsStore.addListener(() => {\n            this.resetCurrentPic();\n        });\n    }\n\n    resetCurrentPic() {\n        this.currentPic = this.picsStore.getCurrentPic();\n        //console.log(\"resetCurrentPic\", this.currentPic);\n        if(this.currentPic._id && this.savePlease) {\n            this.myInfo.picId = this.currentPic.picId;\n            this.saveInfo();\n            this.savePlease = undefined;\n        }\n    }\n\n    saveInfo() {\n        if(this.myInfo && this.myInfo._id) {\n            this.teamMemberActions.saveTeamMember(this.myInfo);\n        }\n    }\n\n    savePic(pic) {\n        this.savePlease = true;\n        this.picsActions.addPic(pic);\n    }\n}\n\n\nangular.module(\"myApp\").controller(\"AuthUserController\", AuthUserController);"]}