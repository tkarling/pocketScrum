{"version":3,"sources":["UserStory.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEnC,IAAI,MAAM,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAE;AAC9B,QAAI,EAAE;AACF,YAAI,EAAE,MAAM;AACZ,gBAAQ,EAAE,IAAI;KACjB;AACD,eAAW,EAAE;AACT,YAAI,EAAE,MAAM;KACf;AACD,UAAM,EAAE;AACJ,YAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;AACpC,WAAG,EAAE,QAAQ;AACb,mBAAS,0BAA0B;KACtC;AACD,YAAQ,EAAE;AACN,YAAI,EAAE,MAAM;KACf;AACD,oBAAgB,EAAE;AACd,YAAI,EAAE,MAAM;KACf;AACD,cAAU,EAAE;AACR,YAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;AACpC,WAAG,EAAE,YAAY;AACjB,mBAAS,0BAA0B;KACtC;AACD,OAAG,EAAE;AACD,YAAI,EAAE,MAAM;AACZ,iBAAS,EAAE,IAAI;AACf,gBAAM,CACF,aAAa,EACb,KAAK,CACR;AACD,mBAAS,aAAa;KACzB;AACD,UAAM,EAAE;AACJ,YAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;AACpC,WAAG,EAAE,QAAQ;KAChB;AACD,WAAO,EAAE;AACL,YAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;AACpC,WAAG,EAAE,SAAS;KACjB;AACD,WAAO,EAAE;AACL,YAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;AACpC,WAAG,EAAE,SAAS;KACjB;AACD,WAAO,EAAE;AACL,YAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;AACpC,WAAG,EAAE,SAAS;KACjB;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC","file":"UserStory-compiled.js","sourcesContent":["var mongoose = require('mongoose');\n\nvar schema = new mongoose.Schema ({\n    name: {\n        type: String,\n        required: true\n    },\n    description: {\n        type: String\n    },\n    status: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Status\",\n        default: \"55e2326af68548f0fc933afb\"\n    },\n    priority: {\n        type: Number\n    },\n    reasonForImpeded: {\n        type: String\n    },\n    assignedTo: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"TeamMember\",\n        default: \"55e48b010fde1bd55c316cf6\"\n    },\n    tag: {\n        type: String,\n        lowercase: true,\n        enum: [\n            'requirement',\n            'bug'\n        ],\n        default: \"requirement\"\n    },\n    sprint: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Sprint\"\n    },\n    release: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Release\"\n    },\n    feature: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Feature\"\n    },\n    project: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Project\"\n    }\n});\n\nmodule.exports = mongoose.model('UserStory', schema);"]}