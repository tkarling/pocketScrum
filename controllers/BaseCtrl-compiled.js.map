{"version":3,"sources":["BaseCtrl.js"],"names":[],"mappings":"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","file":"BaseCtrl-compiled.js","sourcesContent":["\nclass BaseCtrl {\n    constructor (){\n    }\n\n    basicResponse (err, result, res) {\n        if (err) return res.status(500).send(err);\n        else res.send(result);\n    }\n\n    create(req, res, newItem) {\n        newItem.save((err, result)=> {\n            this.basicResponse(err, result, res);\n        });\n    }\n    read(req, res) {\n        this.model.find(req.query)\n            .exec((err, result)=> {\n                this.basicResponse(err, result, res);\n            });\n    }\n\n    update(req, res) {\n        var id = req.query.id;\n        var updatedObject = req.body;\n        this.model.findByIdAndUpdate(id, updatedObject, {\n            new: true\n        }, (err, result)=> {\n            this.basicResponse(err, result, res);\n        });\n    }\n\n    delete(req, res) {\n        var id = req.query.id;\n        this.model.findByIdAndRemove(id, (err, result)=> {\n            this.basicResponse(err, result, res);\n        });\n    }\n}\n\nlet Status = require('../models/Status');\nexport class StatusCtrl extends BaseCtrl {\n    constructor() {\n        super();\n        this.model = Status;\n    }\n\n    create(req, res) {\n        super.create(req, res, new Status(req.body));\n    }\n}\n\nlet TeamMember = require('../models/TeamMember');\nexport class TeamMemberCtrl extends BaseCtrl {\n    constructor() {\n        super();\n        this.model = TeamMember;\n    }\n\n    create(req, res) {\n        super.create(req, res, new TeamMember(req.body));\n    }\n}\n\nlet UserStory = require('../models/UserStory');\nexport class UserStoryCtrl extends BaseCtrl {\n    constructor() {\n        super();\n        this.model = UserStory;\n    }\n\n    create(req, res) {\n        super.create(req, res, new UserStory(req.body));\n    }\n\n    read(req, res) {\n        this.model.find(req.query)\n            .populate(\"feature\")\n            .populate(\"status\")\n            .populate(\"assignedTo\")\n            .exec((err, result)=> {\n                this.basicResponse(err, result, res);\n            });\n    }\n}\n\nlet Feature = require('../models/Feature');\n//import { Feature } from '../models/Feature';\nexport class FeatureCtrl extends BaseCtrl {\n    constructor() {\n        super();\n        this.model = Feature;\n    }\n\n    create(req, res) {\n        super.create(req, res, new Feature(req.body));\n    }\n\n    read(req, res) {\n        this.model.find(req.query)\n            .populate(\"status\")\n            .exec((err, result)=> {\n                this.basicResponse(err, result, res);\n            });\n    }\n}\n\nlet Project = require('../models/Project');\nexport class ProjectCtrl extends BaseCtrl {\n    constructor() {\n        super();\n        this.model = Project;\n    }\n\n    create(req, res) {\n        super.create(req, res, new Project(req.body));\n    }\n}\n"]}