{"version":3,"sources":["PicCtrl.js"],"names":[],"mappings":"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","file":"PicCtrl-compiled.js","sourcesContent":["var fs = require('fs'); \nvar lwip = require('lwip');\nvar Pic = require('../models/Pic');\nvar PicData = require('../models/PicData');\n\nvar getImageType = function (mimetype) {\n    return mimetype.substring(6, mimetype.length);\n}\n\nvar createPicImage = function (image, name, contentType) {\n    return {data: image, name: name, contentType: contentType}\n};\n\nmodule.exports = {\n\n    upload: function (req, res) {\n        var tmp_path = req.file.path;\n        var mimetype = req.file.mimetype;\n        var imgType = getImageType(mimetype);\n        var imgName = req.file.originalname;\n        var thumbnailName = \"tn_\" + imgName;\n        //console.log(\"tmp_path\", tmp_path, imgName, thumbnailName, mimetype, req.file);\n\n        var newPic = new Pic;\n        fs.readFile(tmp_path, function (err, data) {\n            if (err) return res.status(500).send(err);\n            newPic.img = createPicImage(data, imgName, mimetype);\n            lwip.open(tmp_path, imgType, function (oerr, image) {\n                if (oerr) return res.status(500).send(oerr);\n                image.contain(150, 150, function (err, croppedImage) {\n                    if (err) console.log(\"image.scale error\", err);\n                    image.crop(100, 100, function (err, croppedImage) {\n                        if (err) console.log(\"image.crop error\", err);\n                        croppedImage.toBuffer(imgType, function (err, buffer) {\n                            if (err) console.log(\"toBuffer error\", err);\n                            newPic.thumbnail = createPicImage(buffer, thumbnailName, mimetype);\n                            newPic.save(function (perr, picsResult) {\n                                fs.unlink(tmp_path, function (uerr) {\n                                    if (uerr) console.log(\"error deleting tmp file\", uerr);\n                                });\n                                if (perr) return res.status(500).send(perr);\n\n                                var newPicData = new PicData;\n                                newPicData.name = imgName;\n                                newPicData.picId = picsResult._id;\n                                newPicData.save(function (derr, dataResult) {\n                                    if (derr) return res.status(500).send(derr);\n                                    else res.send(dataResult);\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        });\n    },\n    \n    read: function(req, res) {\n        PicData.find(req.query)\n            .exec(function(err, result) {\n                if (err) return res.status(500).send(err);\n                else res.send(result);\n            });\n    },\n\n    readFullPic: function (req, res, next) {\n        Pic.findById(req.query.id, function (err, doc) {\n            if (err) return next(err);\n            res.contentType(doc.img.contentType);\n            res.send(doc.img.data);\n        });\n    },\n\n    readThumbnail: function (req, res, next) {\n        Pic.findById(req.query.id, function (err, doc) {\n            //console.log(\"readThumbnail\", doc);\n            if (err) return next(err);\n            res.contentType(doc.thumbnail.contentType);\n            res.send(doc.thumbnail.data);\n        });\n    },\n\n    update: function (req, res) {\n        console.log(\"update\", req.query.id, req.body);\n        var id = req.query.id;\n        var updatedObject = req.body;\n        PicData.findByIdAndUpdate(id, updatedObject, {\n            new: true\n        }, function (err, result) {\n            if (err) return res.status(500).send(err);\n            else {\n                console.log(\"update result\", result);\n                res.send(result);\n            }\n        });\n    },\n\n    delete: function (req, res) {\n        var picDataId = req.query.id;\n\n        PicData.findById(picDataId, function (err, doc) {\n            if (err) return res.status(500).send(err);\n            var picId = doc.picId;\n            Pic.findByIdAndRemove(picId, function (perr, result) {\n                if (perr) return res.status(500).send(perr);\n                PicData.findByIdAndRemove(picDataId, function (derr, result) {\n                    if (derr) return res.status(500).send(derr);\n                    else res.send(result);\n                });\n            });\n        });\n    }\n};"]}